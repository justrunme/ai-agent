version: '3.8'

services:
  weaviate:
    image: semitechnologies/weaviate:latest
    ports:
      - '8081:8080'
    environment:
      - AUTHENTICATION_ANONYMOUS_ACCESS_ENABLED=true
      - PERSISTENCE_DATA_PATH=/var/lib/weaviate
      - ENABLE_MODULES=text2vec-openai
      - DEFAULT_VECTORIZER_MODULE=text2vec-openai
      - OPENAI_APIKEY=${OPENAI_API_KEY}
    volumes:
      - weaviate_data:/var/lib/weaviate
    networks:
      - ai-net
    healthcheck:
      test: ["CMD-SHELL", "nc -z localhost 8080 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 2G
        reservations:
          memory: 1G

  log-ingestor:
    build: ./log_ingestor
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - WEAVIATE_URL=http://weaviate:8080
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - LOG_INGESTOR_INTERVAL=300  # 5 minutes
      - LOG_INGESTOR_BATCH_SIZE=50
    depends_on:
      weaviate:
        condition: service_healthy
    networks:
      - ai-net
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M

  agent:
    build: ./agent
    ports:
      - '5001:5000'
    env_file:
      - .env
    environment:
      - WEAVIATE_URL=http://weaviate:8080
      - FLASK_ENV=production
      - FLASK_DEBUG=0
    depends_on:
      weaviate:
        condition: service_healthy
    networks:
      - ai-net
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  web-ui:
    image: nginx:alpine
    ports:
      - '8080:80'
    volumes:
      - ./web_ui:/usr/share/nginx/html
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    networks:
      - ai-net
    restart: unless-stopped
    depends_on:
      - agent
    deploy:
      resources:
        limits:
          memory: 128M
        reservations:
          memory: 64M

  # Optional: Add monitoring
  prometheus:
    image: prom/prometheus:latest
    ports:
      - '9090:9090'
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - ai-net
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    ports:
      - '3000:3000'
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin}
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources:ro
    networks:
      - ai-net
    restart: unless-stopped
    depends_on:
      - prometheus

volumes:
  weaviate_data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local

networks:
  ai-net:
    driver: bridge
    driver_opts:
      com.docker.network.bridge.name: ai-net 